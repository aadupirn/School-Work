-Big Data:
    Volume
    Velocity (generation)
    Variety (# of sources)
    Veracity (quality)

-Scalability - how system performance increases as more resources are added

-L1 Cache 1-2ns
-L2 Cache 3-5ns
-L3 Cache 12-20ns
-DRAM 60-200ns
-Memory througput (sequential): 25-50 GB/s

-Spatial Locality
    Referencing items that are stored nearby in memory
        memory caches load an entire cache line (typically 64 bytes) - accessing arr[i] will likely pull arr[i+1] into the cache
        file caches load an entire page (typically 4096 bytes) and often prefetch additional pages

-Temporal Locality
    Referencing the same item over and over again
        stays in cache, only the first reference is an expensive cache miss to memory/disk (unless there is spatial locality as well)

-thread of execution is the smallest sequence of programmed instructions that can be managed independently by an operating system scheduler.

-process is an instance of a computer program.

-Synchronization only ensures correctness

-Queue
    Provides one-way communication between many threads/processes (producer-consumer)

-Pipe/Socket
    Provides two-way communication between two threads/processes
    These are examples of communication with message passing

-Distributed Systems. A bunch of systems working together.
    cloud computing
    grid computing
        a bunch or random computers working together.

-Challenges
    communication
    synchronize
    scale
    how do you deal with failure

-Indexer
    reads through the web data generated by the crawler and (among other things) creates a reverse index from keywords to pages.

-MapReduce
    way to program a distributed system.
    the input is a list of (k1, v1) key-value pairs.
    The programmer specifies:

        a map function map(k1, v1) -> list(k2, v2)
        performs some computation on a single key value pairs and generates new key value pairs.

        a reduce function reduce (k2, list(v2)) -> list(v3)

    Most important thing that the scheduler can do is try to run a worker on the machine that has the data on it.

-Protocol Buffers
    a declarative description of data schema is automatically turned into source code. You compile the data layout of your message with protoc compiler.

-Dealing with data loss: Need to have replication.
